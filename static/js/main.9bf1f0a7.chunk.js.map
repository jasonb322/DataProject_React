{"version":3,"sources":["components/Header.js","components/NameCard.js","components/NamesList.js","components/Selector.js","components/homeStyle.js","components/Home.js","components/Tide-WatchFiles/getData.js","components/Tide-WatchFiles/Location.js","components/Tide-WatchFiles/Tides.js","components/Tide-WatchFiles/Temps.js","components/Tide-WatchFiles/tideStyle.js","components/Tide-WatchFiles/TideWatch.js","App.js","index.js"],"names":["Header","className","NameCard","name","color","useState","bgColor","setBGColor","txtColor","setTxtColor","useEffect","colorString","styleLogic","style","backgroundColor","NamesList","names","map","idx","Selector","setColor","setNames","fetch","then","res","text","txt","split","splitText","filter","element","includes","sort","result","substring","indexOf","catch","err","console","log","htmlFor","onChange","e","target","value","id","toUpperCase","HomeDiv","styled","div","Home","to","getData","url","a","json","data","Location","location","setLocation","setName","lat","setLat","long","setLong","setLocationData","metadata","Tides","convertToTwoDigit","val","toString","formattedDate","date","Date","day","getDate","month","getMonth","getFullYear","dateFormatter","tideURL","tide1","setTide1","tide2","setTide2","tide3","setTide3","tide4","setTide4","currentDate","setCurrentDate","tide1Type","setTide1Type","tide2Type","setTide2Type","tide3Type","setTide3Type","tide4Type","setTide4Type","convertTideTimeTo12Hour","tide","tideTime","length","hour","convertTideType","tideType","formatDate","y","m","d","Error","setTideData","predictions","Temps","waterTemp","setWaterTemp","airTemp","setAirTemp","getWaterTemp","v","getAirTemp","TideDiv","TideWatch","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bf1f0a7.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n      <div className='header'>\n        <h1>XYZ Co.</h1>\n        <h2>Client Database</h2>\n      </div>\n    );\n  }\n  \n  export default Header;","import { useState, useEffect } from 'react'\n\nconst NameCard = ({ name, color }) => {\n\n    const [bgColor, setBGColor] = useState()\n    const [txtColor, setTxtColor] = useState()\n\n    const styleLogic = (colorString) => {\n        switch (colorString) {\n            case 'red':\n                setBGColor('#FFB6C1')\n                setTxtColor('#B22222')\n                break;\n\n            case 'orange':\n                setTxtColor('#B86800')\n                setBGColor('#FFCB87')\n                break;\n\n            case 'yellow':\n                setBGColor('#FFF8BA')\n                setTxtColor('#DAA520')\n                break;\n\n            case 'green':\n                setBGColor('#66CDAA')\n                setTxtColor('#006400')\n                break;\n\n            case 'blue':\n                setTxtColor('#024566')\n                setBGColor('#A3E1FF')\n                break;\n\n            case 'indigo':\n                setTxtColor('#002566')\n                setBGColor('#B0C4DE')\n                break;\n\n            case 'violet':\n                setTxtColor('#2E0166')\n                setBGColor('#E2C2FC')\n                break;\n\n            default:\n                setBGColor('#7F7F7F')\n                setTxtColor('#FFFFFF')\n                break;\n        }\n    }\n\n    useEffect(() => {\n        return styleLogic(color)\n    }, [color])\n    \n\n    return (\n        <div className='name-card'>\n            <div className='name' style={{ backgroundColor: bgColor, color: txtColor }}>{name}</div>\n        </div>\n    )\n    \n}\nexport default NameCard\n","/*\n    Map names to DOM\n*/\n\nimport NameCard from \"./NameCard\"\n\nconst NamesList = ({ names, color }) => {\n\n    return (\n        <div className=\"names-list\">\n            {names.map((name, idx) => <NameCard key={idx} name={name} color={color} />)}\n        </div>\n    )\n}\n\nexport default NamesList\n","import React from 'react'\nimport NamesList from './NamesList';\nimport { useState, useEffect } from 'react'\n\nconst Selector = () => {\n    const [color, setColor] = useState('')\n    const [names, setNames] = useState([])\n\n    const handleChange = (e) => {\n        setColor(e.target.value)\n    }\n\n    useEffect(() => {\n        fetch('./dataFile.txt')\n        .then(res => res.text())\n        .then(txt => txt.split(\"\\n\\n\"))\n        .then(splitText => splitText.filter(element => element.includes('Color:' + color)).sort())\n        .then(result => result.map(\n            element => element.substring(element.indexOf('Name:') + 5, element.indexOf('Company:') - 1)\n        ))\n        .then(names => setNames(names.sort()))\n        .catch(err => console.log(\"Error: \" + err))\n    }, [color])\n\n    return (\n        <div>\n            <label htmlFor=\"colorChoice\"><b>Select Team Color: </b></label>\n            <select className=\"colorChoice\" onChange={handleChange}>\n\n                <option value=\"\">None</option>\n                <option value=\"red\">Red</option>\n                <option value=\"orange\">Orange</option>\n                <option value=\"yellow\">Yellow</option>\n                <option value=\"green\">Green</option>\n                <option value=\"blue\">Blue</option>\n                <option value=\"indigo\">Indigo</option>\n                <option value=\"violet\">Violet</option>\n            </select>\n\n            <h3 style={ color === 'yellow' ? {color: 'darkgoldenrod'} : {color: color }} id=\"listColor\">{color === '' ? \"NO TEAM SELECTED\" : color.toUpperCase() + \" TEAM\"}</h3>\n\n            {names && <NamesList names={names} color={color}/>}\n\n        </div>\n    )\n}\n\n\nexport default Selector;\n","import styled from 'styled-components'\n\nexport const HomeDiv = styled.div`\n\n.link {\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n.colorChoice {\n  font-family: 'Raleway', sans-serif;\n  font-weight: 400;\n  padding: 0.1em\n}\n\n.header {\n  text-align: left;\n}\n\nh1 {\n  margin: 0.5em 0 0 0 ;\n  padding: 0;\n  font-size: 2.5em;\n}\n\nh2, h3 {\n\n  margin: 0px;\n}\n\n.colorChoice {\n  margin: 5px 0 0 0; \n}\n\n#listColor {\n  margin: 1em;\n}\n\n.topSpan {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline\n}\n\n.names-list {\n  display: grid;\n  grid-template-columns: repeat(3, 33%);\n  gap: 10px;\n  max-width: 800px;\n}\n\n.name {\n  font-weight: 400;\n  border-radius: .5em;\n  padding: 5%;\n  text-align: center;\n  /* background-color:lightsteelblue */\n}\n`;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Header from \"./Header\";\nimport Selector from \"./Selector\";\nimport { HomeDiv } from './homeStyle'\n\n\nconst Home = () => {\n    return (\n        <HomeDiv>\n            <div className=\"topSpan\">\n                <Header />\n                <Link className='link' to='./TideWatch'>I'd rather be surfing!</Link>\n            </div>\n            <Selector />\n        </HomeDiv>\n    )\n}\n\nexport default Home\n","// call data from API\nconst getData = async (url) => {\n  const res = await fetch(url)\n  const data = await res.json()\n  return data\n}\n\nexport default getData\n","import getData from './getData'\nimport { useState, useEffect } from 'react'\n\nconst Location = () => {\n\n  const waterTempURL = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=8534720&product=water_temperature&datum=STND&time_zone=lst_ldt&units=english&format=json'\n\n  const [location, setLocation] = useState(0)\n  const [name, setName] = useState('')\n  const [lat, setLat] = useState(0.0)\n  const [long, setLong] = useState(0.0)\n\n  const setLocationData = async () => {\n    const data = await getData(waterTempURL)\n    setLocation(data.metadata.id)\n    setName(data.metadata['name'])\n    setLat(data.metadata['lat'])\n    setLong(data.metadata['lon'])\n  }\n\n  useEffect(() => {\n    setLocationData()\n  }, [])\n  \n\n  return (\n    <div className='location'>\n      <h1>{name}</h1>\n      <h2>Tides and Temps</h2>\n      <div className='locationStats'>\n        <h4>Lat: {lat}</h4>\n        <h4>Long: {long}</h4>\n        <h4>NOAA Station Id: {location}</h4>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Location\n","/* Control functionality of the tide API call and return formatted tide times */\n\nimport getData from \"./getData\"\nimport { useState, useEffect } from 'react'\n\nconst Tides = () => {\n\n\n  //===============================================================\n  //\n  // FORMAT URL FOR API REQUEST \n  //\n  //===============================================================\n\n  // tide info returned in format -> \"2021-06-11 08:58\",\n\n  // converts numbers to two digits (String type), example 1 = 01\n  // feeds into the automated URL for current date on API call\n  function convertToTwoDigit(val) {\n    if (val < 10) {\n      val = val.toString()\n      val = \"0\" + val\n    }\n    return val\n  }\n\n  // formats the current date (local time) to YYYYMMDD, for use in API call.\n  function dateFormatter() {\n    let date = new Date()\n    // console.log(date)\n\n    let day = date.getDate()\n    day = convertToTwoDigit(day)\n    // console.log(day)\n\n    let month = date.getMonth() + 1\n    month = convertToTwoDigit(month).toString()\n    // console.log(month)\n\n    const year = date.getFullYear()\n\n    const combined = year + month + day\n    return combined.toString()\n  }\n\n  // store the formatted date to var\n  const formattedDate = dateFormatter()\n\n  // interpolate the URL used for the tide call to the API\n  const tideURL = `https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?begin_date=${formattedDate}&range=48&station=8534720&product=predictions&datum=STND&time_zone=lst_ldt&interval=hilo&units=english&format=json`\n  // console.log(tideURL)\n\n  // TEST URL - See tide information returned from API ///////////////////////////////\n  // const testURL = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?begin_date=20210611&range=48&station=8534720&product=predictions&datum=STND&time_zone=lst_ldt&interval=hilo&units=english&format=json'\n  // console.log(testURL)\n\n\n\n  //===============================================================\n  //\n  // PREPARE TIDES FOR DISPLAY IN BROWSER\n  //\n  //===============================================================\n\n  const [tide1, setTide1] = useState('')\n  const [tide2, setTide2] = useState('')\n  const [tide3, setTide3] = useState('')\n  const [tide4, setTide4] = useState('')\n\n  const [currentDate, setCurrentDate] = useState('')\n\n  const [tide1Type, setTide1Type] = useState('')\n  const [tide2Type, setTide2Type] = useState('')\n  const [tide3Type, setTide3Type] = useState('')\n  const [tide4Type, setTide4Type] = useState('')\n\n  // convert the API's returned time to 12 hour time\n  function convertTideTimeTo12Hour(tide) {\n    let tideTime = tide.substring(tide.length - 5)\n    let hour = tideTime.substring(0, 2)\n\n    if (hour >= 12) {\n      if (hour > 12) {\n        hour -= 12\n      }\n      tideTime = hour + tideTime.substring(2)\n      return tideTime + \" PM\"\n    } else if (hour === '00') {\n        hour = '12'\n        tideTime = hour + tideTime.substring(2)\n        return tideTime + \" AM\"\n    } else {\n        return tideTime + \" AM\"\n    }\n  }\n\n  // convert the returned single letter tide type to \"low\" or \"high\"\n  function convertTideType(tideType) {\n    if (tideType === 'L') {\n      return 'Low: '\n    } else {\n      return 'High: '\n    }\n  }\n\n  // formatDate may be unecessary as the Date object may return 3-letter month, look into later to clean up code\n  // format current date\n  function formatDate(tide) {\n    const y = tide.substring(0, 4)\n    let m = tide.substring(5, 7)\n    const d = tide.substring(8, 10)\n    switch (m) {\n      case '01':\n        m = 'Jan'\n        break;\n      case '02':\n        m = 'Feb'\n        break;\n      case '03':\n        m = 'March'\n        break;\n      case '04':\n        m = 'April'\n        break;\n      case '05':\n        m = 'May'\n        break;\n      case '06':\n        m = 'June'\n        break;\n      case '07':\n        m = 'July'\n        break;\n      case '08':\n        m = 'Aug'\n        break;\n      case '09':\n        m = 'Sept'\n        break;\n      case '10':\n        m = 'Oct'\n        break;\n      case '11':\n        m = 'Nov'\n        break;\n      case '12':\n        m = 'Dec'\n        break;\n      default:\n        throw Error('Unable to format month.')\n    }\n    return m + \" \" + d + \", \" + y\n  }\n\n\n  //===============================================================\n  //\n  // DISPLAY TIDES IN BROWSER\n  //\n  //===============================================================\n\n  // set the tide data on the UI when API call is returned\n  const setTideData = async () => {\n    const data = await getData(tideURL)\n      .catch((err) => {\n        console.log(\"Unable to retrieve tide data from API server.\", err)\n      })\n\n    setTide1(convertTideTimeTo12Hour(data.predictions[0]['t']))\n    setTide2(convertTideTimeTo12Hour(data.predictions[1]['t']))\n    setTide3(convertTideTimeTo12Hour(data.predictions[2]['t']))\n    setTide4(convertTideTimeTo12Hour(data.predictions[3]['t']))\n\n    setCurrentDate(formatDate(data.predictions[0]['t']))\n\n    setTide1Type(convertTideType(data.predictions[0]['type']))\n    setTide2Type(convertTideType(data.predictions[1]['type']))\n    setTide3Type(convertTideType(data.predictions[2]['type']))\n    setTide4Type(convertTideType(data.predictions[3]['type']))\n  }\n\n  useEffect(() => {\n    setTideData()\n  })\n\n\n  return (\n    <div className='tides'>\n      <br />\n      <h2>{currentDate}</h2>\n      <h4>{tide1Type} {tide1}</h4>\n      <h4>{tide2Type} {tide2}</h4>\n      <h4>{tide3Type} {tide3}</h4>\n      <h4>{} {tide4.includes('AM') ? \"\": tide4Type + \" \" + tide4}</h4>\n    </div>\n  )\n}\n\nexport default Tides","import { useState, useEffect } from 'react'\nimport getData from './getData'\n\n\nconst Temps = () => {\n\n  // NOAA Tides and Currents API - Water Temp URL\n  const waterTempURL = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=8534720&product=water_temperature&datum=STND&time_zone=lst_ldt&units=english&format=json'\n\n  // can't combine requests, URL for air temp\n  const airTempURL = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=8534720&product=air_temperature&datum=STND&time_zone=lst_ldt&units=english&format=json'\n\n  const [waterTemp, setWaterTemp] = useState('')\n  const [airTemp, setAirTemp] = useState('')\n  \n  // call getData to set water temp\n  const getWaterTemp = async () => {\n    const data = await getData(waterTempURL)\n    setWaterTemp(data.data[0].v)\n  }\n\n  // call getData to set water temp\n  const getAirTemp = async () => {\n    const data = await getData(airTempURL)\n    setAirTemp(data.data[0].v)\n  }\n\n  // update values when page loads and whenever there is a change to water or air temps\n  useEffect(() => {\n    getWaterTemp()\n    getAirTemp()\n  }, [waterTemp, airTemp])\n\n  // display information on the page\n  return (\n    <div className='temps'>\n      <br />\n      <h4>Water: {waterTemp} ˚F</h4 >\n      <h4 className='air-temp'>Air: {airTemp} ˚F</h4 >\n    </div>\n  )\n}\n\nexport default Temps\n","/*\n**********************************************\nACTS AS STYLE SHEET FOR TIDEWATCH.JS\n**********************************************\n*/\n\nimport styled from 'styled-components'\n\n\nexport const TideDiv = styled.div`\n\n.tideBody {\n  font-family: 'Major Mono Display', monospace;\n  border-style: solid;\n  border-width: 5px;\n  border-radius: 1em;\n  margin: 20px auto;\n  padding: 0px 10px 20px 10px;\n  text-transform: lowercase;\n  max-width: 380px;\n  background-color: #b3d5ff;\n  color: #314763;\n}\n\n.locationStats h4 {\n  margin: 0.1em;\n}\n\nh4 {\n  margin: 1em;\n}\n\n.location p {\n  margin: 0;\n}\n\n.air-temp {\n  padding-bottom: 20px;\n}\n\n.link {\n  margin-top: 15px;\n  padding: 5px;\n}\n`;\n\n\n\n\n\n\n","// Jason Bahr\n// May 10, 2021\n// This app will show you the tidal data for the Atlantic City NOAA station\n\nimport Location from './Location'\nimport Tides from './Tides'\nimport Temps from './Temps'\nimport { Link } from 'react-router-dom'\nimport { TideDiv } from './tideStyle'\n\nfunction TideWatch() {\n  return (\n    <TideDiv>\n      <div className='tideBody'>\n        <Location />\n        <Tides className='tides' />\n        <Temps className='temps' />\n        <Link className=\"link\" to='/'>Back to Work</Link>\n      </div>\n    </TideDiv>\n  );\n}\n\nexport default TideWatch;\n","import Home from \"./components/Home\";\nimport TideWatch from \"./components/Tide-WatchFiles/TideWatch\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './index.css'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route path=\"/tideWatch\">\n            <TideWatch />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}